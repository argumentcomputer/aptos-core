name: Check for new tags and create PR

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight

jobs:
  check-tags:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [ 'dev', 'release/aptos-light-client' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history so we can perform a rebase

      - name: Fetch latest tag
        id: latesttag
        run: |
          LATEST_TAG=$(curl --silent "https://api.github.com/repos/aptos-labs/aptos-core/tags" | jq -r '.[].name' | grep '^aptos-node-v' | sort -V | tail -n 1)
          echo "::set-output name=tag::${LATEST_TAG}"

      - name: Compare and rebase
        id: rebase
        run: |
          CURRENT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout ${{ matrix.branch }}
          git checkout -b rebase-branch-${{ matrix.branch }}
          if ! git rebase --onto ${{ steps.latesttag.outputs.tag }} $CURRENT_TAG; then
            echo "Rebase conflicts detected on branch ${{ matrix.branch }}. Please resolve them manually."
            exit 1
          fi
          git push origin rebase-branch-${{ matrix.branch }}

      - name: Create Issue
        if: ${{ failure() && steps.rebase.outcome == 'failure' }}
        uses: actions/github-script@v5
        with:
          script: |
            const issue = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Rebase conflicts detected on branch ${{ matrix.branch }}`,
              body: `Rebase conflicts detected when trying to rebase branch ${{ matrix.branch }} onto tag ${{ steps.latesttag.outputs.tag }}. Please resolve them manually.`
            }
            github.rest.issues.create(issue)

      - name: Create Pull Request
        if: ${{ success() }}
        uses: peter-evans/create-pull-request@v3
        with:
          title: 'Rebase on new tag ${{ steps.latesttag.outputs.tag }}'
          branch: 'rebase-branch-${{ matrix.branch }}'
          base: '${{ matrix.branch }}'